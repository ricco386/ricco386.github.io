<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Richard's Log</title><link>http://richard.kellnerovci.sk/</link><description>Public notepad about stuff I am currently playing with...</description><atom:link href="http://richard.kellnerovci.sk/feeds/raspberry-pi.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 30 Apr 2015 01:40:00 +0200</lastBuildDate><item><title>Update Raspbian Wheezy to Jessie upgrade</title><link>http://richard.kellnerovci.sk/update-raspbian-wheezy-to-jessie.html</link><description>&lt;p&gt;This weekend was released new version of Debian Linux, with codename “Jessie”. I have decided to update my Raspbian with Jessie source list and give upgrade a try.&lt;/p&gt;
&lt;p&gt;First backup sources list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.wheezy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets check what’s inside&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;/etc/apt/sources.list&lt;/span&gt;
&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://mirrordirector.raspbian.org/raspbian/&lt;/span&gt; &lt;span class="kp"&gt;wheezy&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt; &lt;span class="kp"&gt;rpi&lt;/span&gt;
&lt;span class="c"&gt;# Uncomment line below then &amp;#39;apt-get update&amp;#39; to enable &amp;#39;apt-get source&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#deb-src http://mirror.ox.ac.uk/sites/archive.raspbian.org/archive/raspbian/ wheezy main contrib non-free rpi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Replace wheezy with jessie&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo sed -i &amp;#39;s/wheezy/jessie/g&amp;#39; /etc/apt/sources.list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we can update sources and upgrade packages&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You might be prompted with some questions, for me it was only one prompt if all services should be restarted as they can cause downtimes. I allowed their restart and I wasn’t even kicked out of ssh.&lt;/p&gt;
&lt;p&gt;I have also run dist-upgrade, to update all packages even this install some packages that are not necessary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again you might be prompted several times that config files have changed, and since I wasn’t doing any changes I have updated new versions. You will also be prompted if you want to disable ssh password authentication as root, which I think is a good idea.&lt;/p&gt;
&lt;p&gt;As I mentioned earlier upgrade will download some extra packages, so if you use Raspberry Pi with terminal only you can run removal commands from &lt;a href="/minimize-raspbian-image.html"&gt;Minimized Raspbian image&lt;/a&gt; article where we were minimising Raspbian image.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; So far I have only noticed that python3-rpi.gpio is not installed as it depends on Python3 lesser than 3.3 and Jessie has 3.4.2&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Thu, 30 Apr 2015 01:40:00 +0200</pubDate><guid>tag:richard.kellnerovci.sk,2015-04-29:update-raspbian-wheezy-to-jessie.html</guid><category>Raspberry Pi</category><category>Raspbian</category><category>Python</category></item><item><title>Let`s learn what is going on with Raspberry Pis in home network</title><link>http://richard.kellnerovci.sk/install-zabbix-on-raspberry-pi.html</link><description>&lt;p&gt;Since I have several Raspberry Pi’s at home, I figured out it would be cool to know how they perform while I am not using them. I decided to install &lt;a href="http://www.zabbix.com/"&gt;Zabbix&lt;/a&gt; on one of them. If you don’t know what Zabbix is, it is an open source monitoring solution for networks and applications.&lt;/p&gt;
&lt;p&gt;Let`s install dependencies required for compiling Zabbix from source.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install libxml2-dev libsnmp-dev libcurl4-openssl-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have decided to use PostgreSQL, even though MySQL is available as well, but the performance on Raspberry Pi is significant better with PostgreSQL. Raspbian Wheezy has in repositories version 9.1 available, which is older but sufficient&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install postgresql-9.1 postgresql-server-dev-9.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to use Zabbix with MySQL (which I do NOT recommend) install additional library&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get libmysqld-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets create zabbix user&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo adduser --no-create-home zabbix
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to login to database as postgres&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo -s
su postgres
psql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Connect to template1, create new database and grant access to zabbix user&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\c template1
CREATE USER zabbix WITH PASSWORD &amp;#39;secretPASSWORD&amp;#39;;
CREATE DATABASE zabbix;
GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;
\q
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Switch back to pi user and download latest &lt;a href="http://www.zabbix.com/download.php"&gt;Zabbix from official page&lt;/a&gt; copy to Raspberry Pi and extract it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tar -zxvf zabbix-2.4.5.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to import database schema and data, so go to postgresql directory and import files in this order&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd database/postgresql
psql -U zabbix zabbix &amp;lt; schema.sql
psql -U zabbix zabbix &amp;lt; images.sql
psql -U zabbix zabbix &amp;lt; data.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In case you want it to install to MySQL, just switch import directory postgresql to mysql and import files in the same order. Performance tuning tip for MySQL is to use MyISAM instead of InnoDB as storage engine, it will lower the requirements for CPU when running, but be aware that this step is NOT recommended by Zabbix.&lt;/p&gt;
&lt;p&gt;Return back to Zabbix root directory and start compiling with this options&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./configure --enable-server --enable-agent --with-postgresql --with-net-snmp --with-libcurl --with-libxml2
sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For MySQL installation change from &lt;code&gt;—-with-postgresql&lt;/code&gt; to &lt;code&gt;—-with-mysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We need to set database name &lt;code&gt;DBName&lt;/code&gt;, user &lt;code&gt;DBUser&lt;/code&gt; and password &lt;code&gt;DBPassword&lt;/code&gt; in file zabbix_server.conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /usr/local/etc/zabbix_server.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Update zabbix_agentd.conf with &lt;code&gt;Server&lt;/code&gt; IP address set to 127.0.0.1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /usr/local/etc/zabbix_agentd.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copy daemons into system&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo cp misc/init.d/debian/zabbix-server /etc/init.d/
sudo cp misc/init.d/debian/zabbix-agent /etc/init.d/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modify daemons and add LSB tags so they are proper Debian init scripts and we can manipulate them with service command (analogically do the same for agent script)&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Provides:          zabbix_server&lt;/span&gt;
&lt;span class="c"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c"&gt;# Required-Stop:     &lt;/span&gt;
&lt;span class="c"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c"&gt;# Short-Description: Zabbix server&lt;/span&gt;
&lt;span class="c"&gt;# Description:       Zabbix server daemon&lt;/span&gt;
&lt;span class="c"&gt;### END INIT INFO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Setup on boot daemon start and start both daemons&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo chmod 755 /etc/init.d/zabbix-server
sudo update-rc.d zabbix-server defaults
/etc/init.d/zabbix-server start

sudo chmod 755 /etc/init.d/zabbix-agent
sudo update-rc.d zabbix-agent defaults
/etc/init.d/zabbix-agent start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is possible to have the PHP web interface on the same Raspberry Pi, however I have tested on first version and it works, but the performance is slow and sometimes it really overload the whole OS. I managed to make load higher than 20 with draining whole RAM and SWAP, so my recommendation is to install it on other machine, but if that is not an option for you, follow this steps to install Zabbix web interface on your Raspberry Pi&lt;/p&gt;
&lt;p&gt;We need to have Nginx and PHP installed, I have already talked about it in older &lt;a href="/install-nginx-php-and-mysql-on-raspberry-pi.html"&gt;blog post&lt;/a&gt;. We also need install dependencies required for PHP&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install php5-gd php5-pgsql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create directory where webgui will be stored and set web server owner&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mkdir /var/www/zabbix
sudo cp -a frontends/php/* /var/www/zabbix/
sudo chown -R www-data /var/www/zabbix
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We have to update php.ini so it matches the Zabbix requirements&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/php5/fpm/php.ini
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure these values are set:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;max_execution_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;max_input_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;post_max_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;
&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;supported&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//php.net/manual/en/timezones.php)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PHP has to be reloaded in order to our changes take effects&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /etc/init.d/php5-fpm restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also need to create site-available configuration file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ipv4&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;Raspberry&lt;/span&gt; &lt;span class="n"&gt;Pi&lt;/span&gt; &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;

    &lt;span class="n"&gt;access_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;Parse&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nc"&gt;.php&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zabbix&lt;/span&gt; &lt;span class="nt"&gt;directory&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.php&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zabbix&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;QUERY_STRING&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;query_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;REQUEST_METHOD&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_method&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;CONTENT_TYPE&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;CONTENT_LENGTH&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;content_length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_intercept_errors&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_ignore_client_abort&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_connect_timeout&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_send_timeout&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_read_timeout&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_buffer_size&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_buffers&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_busy_buffers_size&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fastcgi_temp_file_write_size&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;Disable&lt;/span&gt; &lt;span class="nt"&gt;viewing&lt;/span&gt; &lt;span class="nc"&gt;.htaccess&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nc"&gt;.htpassword&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.ht&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;deny&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reload Nginx to read new configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /etc/init.d/nginx restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open browser and visit your Raspberry Pi and finish configuration in browser&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Sun, 26 Apr 2015 22:09:00 +0200</pubDate><guid>tag:richard.kellnerovci.sk,2015-04-26:install-zabbix-on-raspberry-pi.html</guid><category>Raspberry Pi</category><category>Raspbian</category><category>Zabbix</category><category>PostgreSQL</category><category>MySQL</category></item><item><title>Install Ludolph on Raspberry Pi</title><link>http://richard.kellnerovci.sk/install-ludolph-on-raspberry-pi.html</link><description>&lt;p&gt;&lt;a href="https://github.com/erigones/Ludolph"&gt;Ludolph&lt;/a&gt; is Jabber Bot with &lt;a href="http://www.zabbix.com/"&gt;Zabbix&lt;/a&gt; support, it is lightweight and has very few dependencies, therefore ideal to run on Raspberry Pi. It is easily extensible and you can write your own plugins in Python, so you can do literary anything with it via Jabber. Ludolph supports both Python 2 and Python 3.&lt;/p&gt;
&lt;p&gt;One of the benefits of having a Jabber bot on Raspberry Pi is that you can communicate with it, even if it doesn’t have public IP address.  Easiest way is to install in into virtualenv and you can start playing with it immediately. We will go throughout proper Raspbian installation with a separate user and setting service as you would run it on production server.&lt;/p&gt;
&lt;p&gt;Add user under which we will run it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;useradd -M ludolph
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default Raspberry Pi doesn’t have PIP installed, so we have to add it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we can install Ludolph into Raspbian&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install ludolph
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Download the init script for Debian based linux from Github and make it executable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo wget -O /etc/init.d/ludolph https://raw.github.com/erigones/Ludolph/master/init.d/ludolph.debian
sudo chmod +x /etc/init.d/ludolph
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to make a few amendments in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;USER=ludolph&lt;/span&gt;
&lt;span class="x"&gt;PIDFILE=/tmp/&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;pid&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;DAEMON=&amp;quot;/usr/local/bin/&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Make sure &lt;code&gt;USER&lt;/code&gt; is set to newly crated user &lt;/li&gt;
&lt;li&gt;user has proper write permissions for file configured in &lt;code&gt;PIDFILE&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;DEAMON&lt;/code&gt; is path to Ludolph executable script.   //Update init script. GIT update path to ludolph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now we need to copy configuration file &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo wget -O /etc/ludolph.cfg https://raw.github.com/erigones/Ludolph/master/ludolph/ludolph.cfg.example
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And setup required fields. We are running it is daemon mode so enable this option, uncomment pidfile option and make sure it matches the path defined in &lt;code&gt;PIDFILE&lt;/code&gt; in init script. Also setup login credentials that you would like to use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="c1"&gt;# We are going to run Ludolph in daemon mode&lt;/span&gt;
&lt;span class="na"&gt;daemon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="c1"&gt;# Uncomment, add path to pid file&lt;/span&gt;
&lt;span class="c1"&gt;# Make sure that `USER` has proper write permissions&lt;/span&gt;
&lt;span class="na"&gt;pidfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/tmp/ludolph.pid&lt;/span&gt;
&lt;span class="c1"&gt;# Use a dedicated jabber account for Ludolph&lt;/span&gt;
&lt;span class="na"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ludolph@example.com&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ludolphpassword&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Other useful options you probably want to fill in is users and admins configuration variables so nobody (except you) will be able to talk to Ludolph. Just put in there your jabber ID. Afterwards we need to adjust the configuration file ownership and permissions so nobody except the user under which Ludolph runs is able to read it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo chown root:USERgroup /etc/ludolph.cfg
sudo chmod 0640 /etc/ludolph.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now we can start Ludolph as a regular Raspbian service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service ludolph start
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Mon, 13 Apr 2015 16:18:00 +0200</pubDate><guid>tag:richard.kellnerovci.sk,2015-04-13:install-ludolph-on-raspberry-pi.html</guid><category>Raspberry Pi</category><category>Raspbian</category><category>Ludolph</category></item><item><title>Minimized Raspbian image (no X server) with SD card backup</title><link>http://richard.kellnerovci.sk/minimize-raspbian-image.html</link><description>&lt;p&gt;Most of the time I am using Raspbian only in command line so I’ve decided to create a minimal image, with removed X server and other unnecessary stuff that is not needed for a server. &lt;/p&gt;
&lt;p&gt;You might want to ask why to remove all the stuff when SD cards are cheap today? One reason is that with less packages there is lesser probability to have bugs in the system and other reason is that updates will take less time, as I don’t need to update packages that I don’t need.&lt;/p&gt;
&lt;p&gt;Remove everything related to: X server, LXDE, Openbox, GTK, Alsa and TTF fonts. It will also remove the packages omxplayer, nano (vim rulez :), tsconf (for touch screens) and scratch (a programming environment aimed for kids).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get purge xserver* x11-common x11-utils x11-xkb-utils x11-xserver-utils xarchiver xauth xkb-data console-setup xinit lightdm libx{composite,cb,cursor,damage,dmcp,ext,font,ft,i,inerama,kbfile,klavier,mu,pm,randr,render,res,t,xf86}* lxde* lx{input,menu-data,panel,polkit,randr,session,session-edit,shortcut,task,terminal} obconf openbox gtk* libgtk* alsa* nano scratch tsconf desktop-file-utils omxplayer
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get clean
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not entirely sure why, but apt-get autoclean will remove Python libraries for GPIO and camera, so I had to install them back&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-picamera python3-picamera python3-rpi.gpio python-rpi.gpio
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally remove some files that left and I don’t think they are necessary&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm -rf /usr/share/icons/ /usr/games/ /usr/share/themes/ /usr/share/images/ /home/pi/python_games/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before cleanup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem                    Size  Used Avail Use% Mounted on
rootfs                        2.9G  2.5G  245M  92% /
/dev/root                     2.9G  2.5G  245M  92% /
devtmpfs                       88M     0   88M   0% /dev
tmpfs                          19M  228K   19M   2% /run
tmpfs                         5.0M     0  5.0M   0% /run/lock
tmpfs                          37M     0   37M   0% /run/shm
/dev/mmcblk0p1                 56M  9.8M   47M  18% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After clean up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem                    Size  Used Avail Use% Mounted on
rootfs                        2.9G  922M  1.9G  34% /
/dev/root                     2.9G  922M  1.9G  34% /
devtmpfs                       88M     0   88M   0% /dev
tmpfs                          19M  224K   19M   2% /run
tmpfs                         5.0M     0  5.0M   0% /run/lock
tmpfs                          37M     0   37M   0% /run/shm
/dev/mmcblk0p1                 56M  9.8M   47M  18% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Image size went down from 2.5GB to 922MB which is significant improvement and after reboot everything seems working… &lt;/p&gt;
&lt;p&gt;It is always a good idea to backup, so let create an backup of the SD card with dd command. You have to know which device is your SD card, how to do so I have explained &lt;a href="/install-raspbian-on-raspberry-pi.html"&gt;here&lt;/a&gt;. Insert SD card to your Mac or Linux and run dd command (replace /dev/diskX with your path).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dd if=/dev/diskX of=/path/to/image bs=1M
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my case it would be&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dd if=/dev/sdc1 of=~/raspbian-wheezy-minimized.img bs=1M
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On some systems (like Mac) &lt;em&gt;1M&lt;/em&gt; has to be lower case &lt;em&gt;1m&lt;/em&gt;. This command takes quite a while. So grab a coffee and read another article.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Sun, 12 Apr 2015 22:53:00 +0200</pubDate><guid>tag:richard.kellnerovci.sk,2015-04-12:minimize-raspbian-image.html</guid><category>Raspberry Pi</category><category>Raspbian</category><category>backups</category></item><item><title>Install Nginx PHP and MySQL on Raspberry Pi</title><link>http://richard.kellnerovci.sk/install-nginx-php-and-mysql-on-raspberry-pi.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2015-04-12&lt;/strong&gt;: Article has been updated with minor improvements and fixed steps to match current installation workflow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Previously we have &lt;a href="/install-raspbian-on-raspberry-pi.html"&gt;installed Raspbian&lt;/a&gt;, now we can do some actual work and install Nginx, PHP and MySQL on our Raspberry Pi. Afterwards we can use our Raspberry Pi as full-fledged home webserver.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install nginx php5-fpm php5-cgi php5-cli php5-common
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you open the browser and go to your Raspberry Pi IP address, you will see the Welcome to Nginx site. Let’s create our own. We need a directory where we will store our pages, new directory has to be amended so it is accessible for Nginx.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mkdir -p /var/www/rasppi
sudo chmod -R 775 /var/www
sudo chown -R www-data:www-data /var/www
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create Nginx configuration file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/nginx/sites-available/rasppi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and insert following config. You have to update it with IP address of your Raspberry Pi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ipv4&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;Raspberry&lt;/span&gt; &lt;span class="n"&gt;Pi&lt;/span&gt; &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;access_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;error_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;Parse&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nc"&gt;.php&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;rasppi&lt;/span&gt; &lt;span class="nt"&gt;directory&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.php&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rasppi&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;QUERY_STRING&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;query_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;REQUEST_METHOD&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_method&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;CONTENT_TYPE&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;CONTENT_LENGTH&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;content_length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_intercept_errors&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_ignore_client_abort&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_connect_timeout&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_send_timeout&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_read_timeout&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_buffer_size&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_buffers&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_busy_buffers_size&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;fastcgi_temp_file_write_size&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;Disable&lt;/span&gt; &lt;span class="nt"&gt;viewing&lt;/span&gt; &lt;span class="nc"&gt;.htaccess&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nc"&gt;.htpassword&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;.ht&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;deny&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let’s allow this new config and disable default one.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo ln -s /etc/nginx/sites-available/rasppi /etc/nginx/sites-enabled/rasppi
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are done with Nginx settings, now we have to update php-fpm configuration, edit following file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/php5/fpm/pool.d/www.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;find line with &lt;code&gt;listen = /var/run/php5-fpm.sock&lt;/code&gt; and replace to: &lt;code&gt;listen = 127.0.0.1:9000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create index page with PHP info so we are sure that everything works&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;phpinfo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We have to restart both services&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service php5-fpm restart 
sudo service nginx restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nginx and PHP are finished and running, open your browser and check it out. You should see the PHP info page displaying your Raspberry is running PHP 5.4. And we can install MySQL database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install mysql-server mysql-client php5-mysql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;during the installation you should be asked for root password, if this hasn’t happened, don’t worry and set it with following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysqladmin -u root password yourSECRETrootSQLpassword
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are done. Now we have web server with PHP and MySQL running on Raspberry Pi.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Sun, 12 Apr 2015 10:53:00 +0200</pubDate><guid>tag:richard.kellnerovci.sk,2013-03-08:install-nginx-php-and-mysql-on-raspberry-pi.html</guid><category>Raspberry Pi</category><category>Raspbian</category><category>Nginx</category><category>PHP</category><category>MySQL</category></item><item><title>Install Raspbian on Raspberry Pi</title><link>http://richard.kellnerovci.sk/install-raspbian-on-raspberry-pi.html</link><description>&lt;p&gt;Raspbian “wheezy” is optimized version of Debian for Raspberry Pi. We will talk about how to install Raspbian on SD card so it is bootable on Raspberry Pi. This guide is almost identical with official wiki, but we will also upgrade firmware and run some comparison tests. We will do all the work in Linux terminal, if you are looking for graphical environment or Windows installer I suggest &lt;a href="http://elinux.org/RPi_Easy_SD_Card_Setup"&gt;oficial wiki&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download Raspbian image from official page: &lt;a href="http://www.raspberrypi.org/downloads"&gt;http://www.raspberrypi.org/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Verify downloaded file hashif it matches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sha1sum ~/2013-02-09-wheezy-raspbian.zip&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unzip downloaded file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;unzip ~/2013-02-09-wheezy-raspbian.zip&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;List mounted devices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Insert SD card to computer&lt;/li&gt;
&lt;li&gt;List mounted devices again and notice which one is new&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There should be new device, notice where it is mounted, for example: /dev/sdd&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disconnect all mounted partitions (if there is more of them, you have to repeat command for all of them) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;umount /dev/sdd1&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;with dd command move image to SD card. Run it as sudo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sudo dd bs=4M if=~/2013-02-09-wheezy-raspbian.img of=/dev/sdd&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure cache was cleared and remove the card&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sudo sync&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Insert SD cart to Raspberry Pi and let have some fun&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is handy to have monitor connected to Raspberry on first boot, because there will be setup screen where you can setup basic things. One of the useful things is to resign Raspbian partition to SD card size, or start SSH on boot, so we can connect to Raspberry later on without having it connected to monitor.&lt;/p&gt;
&lt;p&gt;After login update all installed packages to newest versions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get update
apt-get upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets do IO operations benchmark on SD card&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pi@raspberrypi ~ $ dd if=/dev/zero of=~/test.tmp bs=500K count=1024
1024+0 records in
1024+0 records out
524288000 bytes (524 MB) copied, 49.9496 s, 10.5 MB/s
pi@raspberrypi ~ $ dd if=~/test.tmp of=/dev/null bs=500K count=1024
1024+0 records in
1024+0 records out&amp;lt;br&amp;gt;524288000 bytes (524 MB) copied, 26.9565 s, 19.4 MB/s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets have a look at firmware version with command vcgencmd&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pi@raspberrypi ~ $ vcgencmd version
Feb 7 2013 16:46:17 
Copyright (c) 2012 Broadcom
version 367974 (release)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Latest firmware is available on github: &lt;a href="https://github.com/Hexxeh/rpi-firmware"&gt;https://github.com/Hexxeh/rpi-firmware&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo wget http://goo.gl/1BOfJ -O /usr/bin/rpi-update &amp;amp;&amp;amp; sudo chmod +x /usr/bin/rpi-update
sudo rpi-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets have a look at output with upgraded firmware, at the end…&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pi@raspberrypi ~ $ vcgencmd version
Mar 4 2013 22:02:46 
Copyright (c) 2012 Broadcom
version 374489 (release)
pi@raspberrypi ~ $ dd if=/dev/zero of=~/test.tmp bs=500K count=1024
1024+0 records in
1024+0 records out
524288000 bytes (524 MB) copied, 45.1423 s, 11.6 MB/s
pi@raspberrypi ~ $ dd if=~/test.tmp of=/dev/null bs=500K count=1024
1024+0 records in
1024+0 records out
524288000 bytes (524 MB) copied, 27.4592 s, 19.1 MB/s
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Kellner</dc:creator><pubDate>Thu, 07 Mar 2013 09:31:00 +0100</pubDate><guid>tag:richard.kellnerovci.sk,2013-03-07:install-raspbian-on-raspberry-pi.html</guid><category>Raspberry Pi</category><category>Raspbian</category></item></channel></rss>